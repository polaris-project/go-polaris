syntax = "proto3"; // Specify compiler version

package dag;

service Dag {
    rpc NewDag(GeneralRequest) returns (GeneralResponse) {} // Attempt to initialize dag with given config dir
    rpc MakeGenesis(GeneralRequest) returns (GeneralResponse) {} // Attempt to make genesis on provided network dag
    rpc GetTransactionByHash(GeneralRequest) returns (GeneralResponse) {} // Query transaction by hash
    rpc GetTransactionChildren(GeneralRequest) returns (GeneralResponse) {} // Query childreh for tx
    rpc GetTransactionsByAddress(GeneralRequest) returns (GeneralResponse) {} // Query transactions by address
    rpc GetTransactionsBySender(GeneralRequest) returns (GeneralResponse) {} // Query transactions by sender
    rpc GetBestTransaction(GeneralRequest) returns (GeneralResponse) {} // Attempt to query best transaction
    rpc CalculateAddressBalance(GeneralRequest) returns (GeneralResponse) {} // Calculate address balance
}

/* BEGIN REQUESTS */

message GeneralRequest {
    string filePath = 1; // File path

    string network = 2; // Network

    string transactionHash = 3; // Transaction hash

    string address = 4; // Address
}

/* END REQUESTS */

/* BEGIN RESPONSES */

message GeneralResponse {
    string message = 1; // Response
}

/* END REPSONSES */